.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "DELIVER" "1" "May 2012" "Deliver 1.0.0" "Deliver Manual"
.
.SH "NAME"
\fBdeliver\fR \- takes your code into production
.
.SH "SYNOPSIS"
\fBdeliver strategies\fR
.
.br
\fBdeliver check\fR
.
.br
\fBdeliver [\-s strategy]\fR
.
.br
.
.SH "DESCRIPTION"
Deliver is a truly distributed deployment tool with no preferences for a programming language or versioning system\. It only cares about having enough info in the shell environment to do its job\. Why add Ruby or Python wrappers when bash is the most obvious choice for the job?
.
.P
Deliver has a single dependency: GNU parallel \fIhttp://www\.gnu\.org/software/parallel/man\.html#description\fR\. This is required so that remote jobs can be executed on multiple hosts in parallel\.
.
.SH "RUNNING MODES"
You can set a default mode via the MODE environment variable\. The mode option will overrwrite any environment variable\. This is helpful when compact mode is enough for most people on your team, yet some more technical users want to see a more detailed output\.
.
.TP
\fB\-C\fR, \fB\-\-compact\fR (or \fBMODE=compact\fR)
\fIThis is the default mode\fR\. It will only show the description and progress of each running task, on a per\-host basis\. Both standard and error output will be silenced\.
.
.TP
\fB\-V\fR, \fB\-\-verbose\fR (or \fBMODE=verbose\fR)
Will not silence output of the running task\. Great for troubleshooting or getting feedback from all tasks\.
.
.TP
\fB\-D\fR, \fB\-\-debug\fR (or \fBMODE=debug\fR)
Runs the entire script in standard shell debug mode, shows every line of bash that gets executed along with the task output\. Well suited when writing your own strategies or customizing existing ones\.
.
.TP
\fB\-T\fR, \fB\-\-test\fR (or \fBMODE=test\fR)
Similar to a dry\-run\. Will output each command that is going to run with no local or remote changes\. If you want full visibility into the final system commands that get generated, use this mode\. You can even send the resulting commands to a file and run it, without even invoking deliver\. If you want to lock this down, add it to your repository and have everyone on your team use that when deploying\.
.
.SH "STRATEGIES"
\fBdeliver strategies\fR will list all available strategies\. The default strategies make certain assumptions, but they are fully modular and customizable\.
.
.TP
\fBruby\fR
Foreman \fIhttps://github\.com/ddollar/foreman\fR\-aware, uses upstart by default\. Works seamlessly with rvm \fIhttps://rvm\.io/\fR\. \fIThis is the default strategy\fR
.
.TP
\fBnodejs\fR
Heavily inspired by the ruby strategy, also foreman\-aware, defaults to upstart\.
.
.TP
\fBgh\-pages\fR
How many times did you find yourself copying that rake task which generates and publishes to github:pages \fIhttp://pages\.github\.com/\fR your project\'s docco \fIhttps://github\.com/jashkenas/docco\fR or rocco \fIhttps://github\.com/rtomayko/rocco\fR? With deliver, just run \fBdeliver \-s gh\-pages\fR from the app\'s root path\.
.
.SS "Customizing a default strategy?"
.
.SS "Creating a new strategy?"
.
.SH "CHECK"
\fBdeliver check\fR will ensure that everything is set up correctly\. You can also use this to see your final configuration\.
.
.SH "COPYRIGHT"
Deliver is Copyright (C) 2012 Gerhard Lazu \fIhttp://gerhardlazu\.com\fR\.
